
# This must be integer, Represents maximum no. of records you want to keep in memory
# at given point of time.
sort.max.records.in.memory=100000

# Temporary file location, this must be a directory path. Example /tmp/path/
sort.temporary.files.directory=/tmp/tmp-location

# No of records per output sorted file. 0 means all records in single file
sort.max.record.in.output.batch=0

# Source of the input file details
# Source location type - Valid values: AWS_S3_BUCKET and FILE_SYSTEM
sort.source.io.type=FILE_SYSTEM

# S3 path, should not contain the object name and the s3 bucket name
# Used if input location is S3
sort.source.s3.path=<BUCKET NAME>/path/to/object

# S3 path, aws region of source object bucket
# Used if input location is S3
sort.source.s3.region=us-east-1

# File system path
sort.source.filesystem.path=/tmp/location

# Object name
sort.source.object.name=file.bin

# Destination of the output file details
# Destination location type - Valid values: AWS_S3_BUCKET, RECORD_STREAM and FILE_SYSTEM
sort.destination.io.type=FILE_SYSTEM

# S3 path, should not contain the object name and the s3 bucket name
# Used if input location is S3
sort.destination.s3.path=<BucketName>/path/to/object


# S3 path, aws region of source object bucket
# Used if output location is S3
sort.destination.s3.region=us-east-1

# File system path
sort.destination.filesystem.path=/tmp/location

# Object name
sort.destination.object.name=sorted.bin

# Fully qualified class name that provides write, read and comparison logic.
# This must implement SortHandleProvider interface and
# should have a default constructor.
# One can externally write class and provide the input so that custom reader, writer
# and comparision hook can be given.
sort.client.logic.provider=datapipes.apprunner.extmergesort.SampleSortAware